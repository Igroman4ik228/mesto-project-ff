{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-21',\r\n  headers: {\r\n    authorization: 'b0628161-c71c-4e52-9e26-a3e056174f00',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst checkResponse = (res) => {\r\n  if (!res.ok)\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  return res.json();\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const updateUserInfo = (userName, userAbout) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: userName,\r\n      about: userAbout\r\n    })\r\n  })\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const updateUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url\r\n    })\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const addCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard\r\n    })\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const requestLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const unlikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const validateImageUrl = (url) => {\r\n  return fetch(url, {\r\n    method: 'HEAD'\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        return false;\r\n      }\r\n\r\n      const contentType = res.headers.get('Content-Type');\r\n      if (!contentType || !contentType.startsWith('image/')) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    })\r\n    .catch(() => false);\r\n};\r\n","import { requestLikeCard, unlikeCard } from './api.js';\r\n\r\n// Темплейт(шаблон) карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// Функция создания карточки\r\nexport function createCard(cardData, isOwner, isLiked, confirmDeleteCardFunc, likeCardFunc, showCardFunc) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardTitle = cardElement.querySelector('.card__title')\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const likeCount = cardElement.querySelector('.card__like-counter');\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n\r\n  cardImage.addEventListener('click', showCardFunc);\r\n\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n  if (isOwner)\r\n    cardDeleteButton.addEventListener('click', () => confirmDeleteCardFunc(cardElement, cardData._id));\r\n  else\r\n    cardDeleteButton.remove();\r\n\r\n  const cardLike = cardElement.querySelector('.card__like-button');\r\n  if (isLiked)\r\n    cardLike.classList.add('card__like-button_is-active');\r\n  cardLike.addEventListener('click', (evt) => likeCardFunc(evt, likeCount, cardData._id));\r\n\r\n  return cardElement;\r\n};\r\n\r\n// Функция лайка карточки\r\nexport function likeCard(evt, likeCount, cardId) {\r\n  const isLiked = evt.target.classList.contains('card__like-button_is-active');\r\n  const res = isLiked ? unlikeCard(cardId) : requestLikeCard(cardId);\r\n  res.then(res => {\r\n    likeCount.textContent = res.likes.length;\r\n    evt.target.classList.toggle('card__like-button_is-active');\r\n  });\r\n};\r\n","// Функция открытия модального окна\r\nexport function openModal(modal) {\r\n  document.addEventListener('keydown', handlePressEscape);\r\n  modal.classList.add('popup_is-opened');\r\n};\r\n\r\n// Функция закрытия модального окна\r\nexport function closeModal(modal) {\r\n  document.removeEventListener('keydown', handlePressEscape);\r\n  modal.classList.remove('popup_is-opened');\r\n};\r\n\r\n// Функция обработки нажатия клавиши Esc\r\nexport function handlePressEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openModal = document.querySelector('.popup_is-opened');\r\n    closeModal(openModal);\r\n  };\r\n};\r\n\r\n// Функция обработки клика на оверлей или кнопку закрытия\r\nexport function handleOverlayOrCloseBtn(evt) {\r\n  const modal = evt.currentTarget;\r\n  if (evt.target === modal || evt.target.classList.contains('popup__close')) {\r\n    closeModal(modal);\r\n  };\r\n};","function clearValidation(profileForm, validationConfig) {\r\n  const inputList = Array.from(profileForm.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = profileForm.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(profileForm,\r\n      inputElement,\r\n      validationConfig.inputErrorClass,\r\n      validationConfig.errorClass);\r\n  });\r\n};\r\n\r\nfunction enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass)\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement,\r\n        inputElement,\r\n        validationConfig.inputErrorClass,\r\n        validationConfig.errorClass);\r\n\r\n      toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nfunction checkInputValidity(formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  if (inputElement.validity.patternMismatch)\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  else\r\n    inputElement.setCustomValidity(\"\");\r\n\r\n  if (!inputElement.validity.valid)\r\n    showInputError(formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass);\r\n  else\r\n    hideInputError(formElement,\r\n      inputElement,\r\n      inputErrorClass,\r\n      errorClass);\r\n};\r\n\r\nfunction toggleButtonState(inputList, buttonElement, inactiveButtonClass) {\r\n  if (hasInvalidInput(inputList))\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  else\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((input) => {\r\n    return !input.validity.valid\r\n  });\r\n};\r\n\r\nfunction showInputError(formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n  inputElement.classList.add(inputErrorClass);\r\n};\r\n\r\nfunction hideInputError(formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(errorClass);\r\n  inputElement.classList.remove(inputErrorClass);\r\n};\r\n\r\nexport { clearValidation, enableValidation };\r\n\r\n","import { addCard, getInitialCards, getUserInfo, removeCard, updateUserAvatar, updateUserInfo, validateImageUrl } from './components/api.js';\r\nimport { createCard, likeCard } from './components/card.js';\r\nimport { closeModal, handleOverlayOrCloseBtn, openModal } from './components/modal.js';\r\nimport { clearValidation, enableValidation } from './components/validation.js';\r\nimport './pages/index.css';\r\n\r\n// DOM узлы\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst profileAddButton = document.querySelector('.profile__add-button');\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileDesc = document.querySelector('.profile__description');\r\n\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst nameInput = popupTypeEdit.querySelector('.popup__input_type_name');\r\nconst descInput = popupTypeEdit.querySelector('.popup__input_type_description');\r\n\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\nconst placeNameInput = popupTypeNewCard.querySelector('.popup__input_type_card-name');\r\nconst linkInput = popupTypeNewCard.querySelector('.popup__input_type_url');\r\n\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\nconst popupImage = popupTypeImage.querySelector('.popup__image');\r\nconst popupCaption = popupTypeImage.querySelector('.popup__caption');\r\n\r\nconst popupTypeAvatar = document.querySelector('.popup_type_avatar');\r\nconst linkInputAvatar = popupTypeAvatar.querySelector('.popup__input_type_url');\r\n\r\nconst popupConfirmDelete = document.querySelector('.popup_type_confirm-delete');\r\n\r\n// Конфигурация валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\nlet infoForDeleteCard = {};\r\n\r\n// Функция подтверждения удаления карточки \r\nconst confirmDeleteCard = (cardElement, cardId) => {\r\n  infoForDeleteCard.elementCardForDelete = cardElement;\r\n  infoForDeleteCard.cardIdForDelete = cardId;\r\n\r\n  openModal(popupConfirmDelete)\r\n};\r\n\r\n// Функция открытия карточки\r\nfunction showCard(evt) {\r\n  popupImage.src = evt.target.src;\r\n  popupCaption.textContent = evt.target.alt;\r\n\r\n  openModal(popupTypeImage);\r\n};\r\n\r\n// Обработчик для ошибок валидации ссылок\r\nfunction handleErrorLink(input, errorElement, submitButton,\r\n  message = \"Неверная ссылка на изображение или файл не доступен.\") {\r\n  errorElement.textContent = message;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  input.classList.add(validationConfig.inputErrorClass);\r\n  submitButton.classList.toggle(validationConfig.inactiveButtonClass);\r\n};\r\n\r\n// Функция обработки формы\r\nfunction handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const modal = evt.currentTarget;\r\n  const submitButton = modal.querySelector(\".popup__button\")\r\n  if (modal === popupTypeEdit) {\r\n    submitButton.textContent = \"Сохранение...\";\r\n    // Обновление данных профиля\r\n    updateUserInfo(nameInput.value, descInput.value)\r\n      .then(() => {\r\n        profileName.textContent = nameInput.value\r\n        profileDesc.textContent = descInput.value;\r\n\r\n        closeModal(modal);\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n  else if (modal === popupTypeNewCard) {\r\n    submitButton.textContent = \"Сохранение...\";\r\n    const url = linkInput.value\r\n    // Проверка URL\r\n    validateImageUrl(url)\r\n      .then(isValidUrl => {\r\n        if (!isValidUrl) {\r\n          const linkInputError = popupTypeNewCard.querySelector(\".link-input-error\");\r\n          handleErrorLink(linkInput, linkInputError, submitButton)\r\n          return;\r\n        };\r\n\r\n        // Добавление карточки\r\n        addCard(placeNameInput.value, linkInput.value)\r\n          .then((newCardData) => {\r\n            const resultCard = createCard(newCardData, true, false, confirmDeleteCard, likeCard, showCard);\r\n            placesList.prepend(resultCard);\r\n\r\n            // Очистка формы\r\n            const form = modal.querySelector('.popup__form');\r\n            form.reset();\r\n\r\n            // Очистка ошибок валидации\r\n            const newCardForm = modal.querySelector(\".popup__form\");\r\n            clearValidation(newCardForm, validationConfig);\r\n\r\n            closeModal(modal);\r\n          });\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n  else if (modal === popupTypeAvatar) {\r\n    submitButton.textContent = \"Сохранение...\";\r\n    const url = linkInputAvatar.value\r\n    // Проверка URL\r\n    validateImageUrl(url)\r\n      .then(isValidUrl => {\r\n        if (!isValidUrl) {\r\n          const linkInputAvatarError = popupTypeAvatar.querySelector(\".link-input-error\");\r\n          handleErrorLink(linkInputAvatar, linkInputAvatarError, submitButton);\r\n          return;\r\n        };\r\n\r\n        // Обновление аватарки профиля\r\n        updateUserAvatar(url)\r\n          .then(() => {\r\n            profileImage.style.backgroundImage = `url(${url})`\r\n          });\r\n\r\n        closeModal(modal);\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n  else if (modal === popupConfirmDelete) {\r\n    submitButton.textContent = \"Удаление...\";\r\n    // Удаление карточки\r\n    removeCard(infoForDeleteCard.cardIdForDelete)\r\n      .then(() => {\r\n        infoForDeleteCard.elementCardForDelete.remove();\r\n        closeModal(modal);\r\n      })\r\n      .finally(() => submitButton.textContent = \"Да\");\r\n  };\r\n};\r\n\r\n// Включение валидации форм\r\nenableValidation(validationConfig);\r\n\r\n// Загрузка начальных данных\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userInfo, initialCards]) => {\r\n    profileImage.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    profileName.textContent = userInfo.name;\r\n    profileDesc.textContent = userInfo.about;\r\n\r\n    initialCards.forEach(cardData => {\r\n      const isOwner = userInfo._id === cardData.owner._id\r\n      const isLiked = cardData.likes.some(like => like._id === userInfo._id);\r\n\r\n      const resultCard = createCard(cardData, isOwner, isLiked, confirmDeleteCard, likeCard, showCard);\r\n      placesList.append(resultCard);\r\n    });\r\n  });\r\n\r\n// Слушатель для кнопки редактирования профиля\r\nprofileEditButton.addEventListener('click', () => {\r\n  nameInput.value = profileName.textContent;\r\n  descInput.value = profileDesc.textContent;\r\n\r\n  // Очистка ошибок валидации\r\n  const profileForm = popupTypeEdit.querySelector(\".popup__form\");\r\n  clearValidation(profileForm, validationConfig);\r\n\r\n  openModal(popupTypeEdit);\r\n});\r\n\r\n// Слушатель для кнопки добавления новой карточки\r\nprofileAddButton.addEventListener('click', () => openModal(popupTypeNewCard));\r\n\r\n// Слушатель для кнопки редактирования аватарки\r\nprofileImage.addEventListener('click', () => {\r\n  const imageUrl = profileImage.style.backgroundImage.replace(/url\\([\"']?(.*?)[\"']?\\)/, '$1');\r\n  linkInputAvatar.value = imageUrl;\r\n\r\n  // Очистка ошибок валидации\r\n  const avatarForm = popupTypeAvatar.querySelector(\".popup__form\");\r\n  clearValidation(avatarForm, validationConfig);\r\n\r\n  openModal(popupTypeAvatar)\r\n});\r\n\r\n// Другие слушатели\r\npopupTypeEdit.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeEdit.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeAvatar.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeAvatar.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeNewCard.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeNewCard.addEventListener('submit', handleFormSubmit);\r\n\r\npopupConfirmDelete.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupConfirmDelete.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeImage.addEventListener('click', handleOverlayOrCloseBtn);\r\n"],"names":["config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","requestLikeCard","cardId","fetch","method","then","catch","err","console","error","unlikeCard","validateImageUrl","url","contentType","get","startsWith","cardTemplate","document","querySelector","content","createCard","cardData","isOwner","isLiked","confirmDeleteCardFunc","likeCardFunc","showCardFunc","cardElement","cloneNode","cardTitle","cardImage","likeCount","textContent","name","src","link","alt","likes","length","addEventListener","cardDeleteButton","_id","remove","cardLike","classList","add","evt","likeCard","target","contains","toggle","openModal","modal","handlePressEscape","closeModal","removeEventListener","key","handleOverlayOrCloseBtn","currentTarget","clearValidation","profileForm","validationConfig","inputList","Array","from","querySelectorAll","inputSelector","submitButtonSelector","inactiveButtonClass","forEach","inputElement","hideInputError","inputErrorClass","errorClass","toggleButtonState","buttonElement","some","input","validity","valid","hasInvalidInput","formElement","errorElement","id","placesList","profileEditButton","profileAddButton","profileImage","profileName","profileDesc","popupTypeEdit","nameInput","descInput","popupTypeNewCard","placeNameInput","linkInput","popupTypeImage","popupImage","popupCaption","popupTypeAvatar","linkInputAvatar","popupConfirmDelete","formSelector","infoForDeleteCard","confirmDeleteCard","elementCardForDelete","cardIdForDelete","showCard","handleErrorLink","submitButton","message","arguments","undefined","handleFormSubmit","preventDefault","userName","userAbout","value","body","JSON","stringify","about","finally","isValidUrl","nameCard","linkCard","newCardData","resultCard","prepend","reset","linkInputError","avatar","updateUserAvatar","style","backgroundImage","linkInputAvatarError","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userInfo","initialCards","owner","like","append","imageUrl","replace"],"sourceRoot":""}