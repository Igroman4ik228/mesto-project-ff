{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-21',\r\n  headers: {\r\n    authorization: 'b0628161-c71c-4e52-9e26-a3e056174f00',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst checkResponse = (res) => {\r\n  if (!res.ok)\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  return res.json();\r\n};\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const updateUserInfo = (userName, userAbout) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: userName,\r\n      about: userAbout\r\n    })\r\n  })\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const updateUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url\r\n    })\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const addCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard\r\n    })\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const removeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const requestLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const unlikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(res => checkResponse(res))\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const validateImageUrl = (url) => {\r\n  return fetch(url, {\r\n    method: 'HEAD'\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        return false;\r\n      }\r\n\r\n      const contentType = res.headers.get('Content-Type');\r\n      if (!contentType || !contentType.startsWith('image/')) {\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    })\r\n    .catch(() => false);\r\n};\r\n","import { removeCard, requestLikeCard, unlikeCard } from './api.js';\r\n\r\n// Темплейт(шаблон) карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// Функция создания карточки\r\nexport function createCard(cardData,\r\n  isOwner,\r\n  isLiked,\r\n  deleteCardFunc,\r\n  likeCardFunc,\r\n  showCardFunc) {\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardTitle = cardElement.querySelector('.card__title')\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const likeCount = cardElement.querySelector('.card__like-counter');\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n\r\n  cardImage.addEventListener('click', showCardFunc);\r\n\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n  if (isOwner)\r\n    cardDeleteButton.addEventListener('click', () => deleteCardFunc(cardElement, cardData._id));\r\n  else\r\n    cardDeleteButton.remove();\r\n\r\n  const cardLike = cardElement.querySelector('.card__like-button');\r\n  if (isLiked)\r\n    cardLike.classList.add('card__like-button_is-active');\r\n  cardLike.addEventListener('click', (evt) => likeCardFunc(evt, likeCount, cardData._id));\r\n\r\n  return cardElement;\r\n};\r\n\r\n// Функция удаления карточки \r\nexport function deleteCard(cardElement, cardId) {\r\n  removeCard(cardId)\r\n    .then(() => cardElement.remove());\r\n};\r\n\r\n// Функция лайка карточки\r\nexport function likeCard(evt, likeCount, cardId) {\r\n  const isLiked = evt.target.classList.contains('card__like-button_is-active');\r\n  const res = isLiked ? unlikeCard(cardId) : requestLikeCard(cardId);\r\n  res.then((res) => {\r\n    likeCount.textContent = res.likes.length;\r\n    evt.target.classList.toggle('card__like-button_is-active');\r\n  });\r\n};\r\n","// Функция открытия модального окна\r\nexport function openModal(modal) {\r\n  document.addEventListener('keydown', handlePressEscape);\r\n  modal.classList.add('popup_is-opened');\r\n}\r\n\r\n// Функция закрытия модального окна\r\nexport function closeModal(modal) {\r\n  document.removeEventListener('keydown', handlePressEscape);\r\n  modal.classList.remove('popup_is-opened');\r\n}\r\n\r\n// Функция обработки нажатия клавиши Esc\r\nexport function handlePressEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openModal = document.querySelector('.popup_is-opened');\r\n    closeModal(openModal);\r\n  }\r\n}\r\n\r\n// Функция обработки клика на оверлей или кнопку закрытия\r\nexport function handleOverlayOrCloseBtn(evt) {\r\n  const modal = evt.currentTarget;\r\n  if (evt.target === modal || evt.target.classList.contains('popup__close')) {\r\n    closeModal(modal);\r\n  }\r\n}","function clearValidation(profileForm, validationConfig) {\r\n  const inputList = Array.from(profileForm.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = profileForm.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(profileForm,\r\n      inputElement,\r\n      validationConfig.inputErrorClass,\r\n      validationConfig.errorClass);\r\n  });\r\n};\r\n\r\nfunction enableValidation(validationConfig) {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass)\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      checkInputValidity(formElement,\r\n        inputElement,\r\n        validationConfig.inputErrorClass,\r\n        validationConfig.errorClass);\r\n\r\n      toggleButtonState(inputList, buttonElement, validationConfig.inactiveButtonClass);\r\n    });\r\n  });\r\n};\r\n\r\nfunction checkInputValidity(formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  if (inputElement.validity.patternMismatch)\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  else\r\n    inputElement.setCustomValidity(\"\");\r\n\r\n  if (!inputElement.validity.valid)\r\n    showInputError(formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass);\r\n  else\r\n    hideInputError(formElement,\r\n      inputElement,\r\n      inputErrorClass,\r\n      errorClass);\r\n};\r\n\r\nfunction toggleButtonState(inputList, buttonElement, inactiveButtonClass) {\r\n  if (hasInvalidInput(inputList))\r\n    buttonElement.classList.add(inactiveButtonClass);\r\n  else\r\n    buttonElement.classList.remove(inactiveButtonClass);\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((input) => {\r\n    return !input.validity.valid\r\n  });\r\n};\r\n\r\nfunction showInputError(formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n  inputElement.classList.add(inputErrorClass);\r\n};\r\n\r\nfunction hideInputError(formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(errorClass);\r\n  inputElement.classList.remove(inputErrorClass);\r\n};\r\n\r\nexport { clearValidation, enableValidation };\r\n\r\n","import { addCard, getInitialCards, getUserInfo, updateUserAvatar, updateUserInfo, validateImageUrl } from './components/api.js';\r\nimport { createCard, deleteCard, likeCard } from './components/card.js';\r\nimport { closeModal, handleOverlayOrCloseBtn, openModal } from './components/modal.js';\r\nimport { clearValidation, enableValidation } from './components/validation.js';\r\nimport './pages/index.css';\r\n\r\n// DOM узлы\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst profileAddButton = document.querySelector('.profile__add-button');\r\n\r\nconst profileImage = document.querySelector('.profile__image');\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileDesc = document.querySelector('.profile__description');\r\n\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst nameInput = popupTypeEdit.querySelector('.popup__input_type_name');\r\nconst descInput = popupTypeEdit.querySelector('.popup__input_type_description');\r\n\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\nconst placeNameInput = popupTypeNewCard.querySelector('.popup__input_type_card-name');\r\nconst linkInput = popupTypeNewCard.querySelector('.popup__input_type_url');\r\n\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\nconst popupImage = popupTypeImage.querySelector('.popup__image');\r\nconst popupCaption = popupTypeImage.querySelector('.popup__caption');\r\n\r\nconst popupTypeAvatar = document.querySelector('.popup_type_avatar');\r\nconst linkInputAvatar = popupTypeAvatar.querySelector('.popup__input_type_url');\r\n\r\nconst popupConfirmDelete = document.querySelector('.popup_type_confirm-delete');\r\n\r\nlet idCardForDelete = null;\r\n\r\n// Конфигурация валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n\r\n\r\n\r\n// Функция открытия карточки\r\nfunction showCard(evt) {\r\n  popupImage.src = evt.target.src;\r\n  popupCaption.textContent = evt.target.alt;\r\n\r\n  openModal(popupTypeImage);\r\n};\r\n\r\n// Функция для ошибок валидации ссылок\r\nfunction handleErrorLink(input,\r\n  errorElement,\r\n  submitButton,\r\n  message = \"Неверная ссылка на изображение или файл не доступен.\") {\r\n  errorElement.textContent = message;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n  input.classList.add(validationConfig.inputErrorClass);\r\n  submitButton.classList.toggle(validationConfig.inactiveButtonClass);\r\n}\r\n\r\n// Функция обработки формы\r\nfunction handleFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  const modal = evt.currentTarget;\r\n  const submitButton = modal.querySelector(\".popup__button\")\r\n  submitButton.textContent = \"Сохранение...\";\r\n  if (modal === popupTypeEdit) {\r\n    // Обновление данных профиля\r\n    updateUserInfo(nameInput.value, descInput.value)\r\n      .then(() => {\r\n        profileName.textContent = nameInput.value\r\n        profileDesc.textContent = descInput.value;\r\n\r\n        closeModal(modal);\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n  else if (modal === popupTypeNewCard) {\r\n    const url = linkInput.value\r\n    // Проверка URL\r\n    validateImageUrl(url)\r\n      .then(isValidUrl => {\r\n        if (!isValidUrl) {\r\n          const linkInputError = popupTypeNewCard.querySelector(\".link-input-error\");\r\n          handleErrorLink(linkInput, linkInputError, submitButton)\r\n          return;\r\n        };\r\n\r\n        // Добавление карточки\r\n        addCard(placeNameInput.value, linkInput.value)\r\n          .then((newCardData) => {\r\n            const resultCard = createCard(newCardData, true, false, deleteCard, likeCard, showCard);\r\n            placesList.prepend(resultCard);\r\n\r\n            // Очистка формы\r\n            const form = modal.querySelector('.popup__form');\r\n            form.reset();\r\n\r\n            // Очистка ошибок валидации\r\n            const newCardForm = modal.querySelector(\".popup__form\");\r\n            clearValidation(newCardForm, validationConfig);\r\n\r\n            closeModal(modal);\r\n          });\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n  else if (modal === popupTypeAvatar) {\r\n    const url = linkInputAvatar.value\r\n    // Проверка URL\r\n    validateImageUrl(url)\r\n      .then(isValidUrl => {\r\n        if (!isValidUrl) {\r\n          const linkInputAvatarError = popupTypeAvatar.querySelector(\".link-input-avatar-error\");\r\n          handleErrorLink(linkInputAvatar, linkInputAvatarError, submitButton);\r\n          return;\r\n        };\r\n\r\n        // Обновление аватарки профиля\r\n        updateUserAvatar(url)\r\n          .then(() => {\r\n            profileImage.style.backgroundImage = `url(${url})`\r\n          });\r\n\r\n        closeModal(modal);\r\n      })\r\n      .finally(() => submitButton.textContent = \"Сохранить\");\r\n  }\r\n};\r\n\r\n// Включение валидации форм\r\nenableValidation(validationConfig);\r\n\r\n// Загрузка начальных данных\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userInfo, initialCards]) => {\r\n    profileImage.style.backgroundImage = `url(${userInfo.avatar})`;\r\n    profileName.textContent = userInfo.name;\r\n    profileDesc.textContent = userInfo.about;\r\n\r\n    initialCards.forEach(cardData => {\r\n      const isOwner = userInfo._id === cardData.owner._id\r\n      const isLiked = cardData.likes.some(like => like._id === userInfo._id);\r\n\r\n      const resultCard = createCard(cardData, isOwner, isLiked, deleteCard, likeCard, showCard);\r\n      placesList.append(resultCard);\r\n    });\r\n  });\r\n\r\n// Слушатель для кнопки редактирования профиля\r\nprofileEditButton.addEventListener('click', () => {\r\n  nameInput.value = profileName.textContent;\r\n  descInput.value = profileDesc.textContent;\r\n\r\n  // Очистка ошибок валидации\r\n  const profileForm = popupTypeEdit.querySelector(\".popup__form\");\r\n  clearValidation(profileForm, validationConfig);\r\n\r\n  openModal(popupTypeEdit);\r\n});\r\n\r\n// Слушатель для кнопки добавления новой карточки\r\nprofileAddButton.addEventListener('click', () => openModal(popupTypeNewCard));\r\n\r\n// Слушатель для кнопки редактирования аватарки\r\nprofileImage.addEventListener('click', () => {\r\n  const imageUrl = profileImage.style.backgroundImage.replace(/url\\([\"']?(.*?)[\"']?\\)/, '$1');\r\n  linkInputAvatar.value = imageUrl;\r\n\r\n  // Очистка ошибок валидации\r\n  const avatarForm = popupTypeAvatar.querySelector(\".popup__form\");\r\n  clearValidation(avatarForm, validationConfig);\r\n\r\n  openModal(popupTypeAvatar)\r\n});\r\n\r\n\r\n// Другие слушатели\r\npopupTypeEdit.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeEdit.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeAvatar.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeAvatar.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeNewCard.addEventListener('click', handleOverlayOrCloseBtn);\r\npopupTypeNewCard.addEventListener('submit', handleFormSubmit);\r\n\r\npopupTypeImage.addEventListener('click', handleOverlayOrCloseBtn);\r\n\r\npopupConfirmDelete.addEventListener('submit', handleFormSubmit);"],"names":["config","baseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","removeCard","cardId","fetch","method","then","catch","err","console","error","requestLikeCard","unlikeCard","validateImageUrl","url","contentType","get","startsWith","cardTemplate","document","querySelector","content","createCard","cardData","isOwner","isLiked","deleteCardFunc","likeCardFunc","showCardFunc","cardElement","cloneNode","cardTitle","cardImage","likeCount","textContent","name","src","link","alt","likes","length","addEventListener","cardDeleteButton","_id","remove","cardLike","classList","add","evt","deleteCard","likeCard","target","contains","toggle","openModal","modal","handlePressEscape","closeModal","removeEventListener","key","handleOverlayOrCloseBtn","currentTarget","clearValidation","profileForm","validationConfig","inputList","Array","from","querySelectorAll","inputSelector","submitButtonSelector","inactiveButtonClass","forEach","inputElement","hideInputError","inputErrorClass","errorClass","toggleButtonState","buttonElement","some","input","validity","valid","hasInvalidInput","formElement","errorElement","id","placesList","profileEditButton","profileAddButton","profileImage","profileName","profileDesc","popupTypeEdit","nameInput","descInput","popupTypeNewCard","placeNameInput","linkInput","popupTypeImage","popupImage","popupCaption","popupTypeAvatar","linkInputAvatar","popupConfirmDelete","formSelector","showCard","handleErrorLink","submitButton","message","arguments","undefined","handleFormSubmit","preventDefault","userName","userAbout","value","body","JSON","stringify","about","finally","isValidUrl","nameCard","linkCard","newCardData","resultCard","prepend","reset","linkInputError","avatar","updateUserAvatar","style","backgroundImage","linkInputAvatarError","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userInfo","initialCards","owner","like","append","imageUrl","replace"],"sourceRoot":""}